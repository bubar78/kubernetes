# https://blog.eleven-labs.com/fr/introduction-gitlab-ci/
# https://nicolas-poste.medium.com/optimisations-de-gitlab-ci-5-minutes-pour-en-gagner-beaucoup-plus-ae33b31717de
# https://docs.gitlab.com/ee/ci/yaml/

cache: &cache
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - ${BUILD_BINARY}
  #policy: pull-push
  policy: pull # there is no need to push cache after since it hasn't changed

stages:
  #- debug
  - build
  - test
  - container

variables:
  # CI_DEBUG_TRACE: "true"
  GIT_DEPTH: 1
  BUILD_BINARY: hello-world

#cache:
#  key: ${CI_COMMIT_REF_SLUG}
#  policy: pull # there is no need to push cache after since it hasn't changed
#  #policy: pull-push
#  paths:
#    - ${BUILD_BINARY}

# debug:
#   stage: debug
#   image: alpine
#   script:
#     - export

build:
  stage: build
  image: golang
  script:
    - GO111MODULE=auto go build -o ${BUILD_BINARY}
    - GO111MODULE=auto make
  #artifacts:
  #  expire_in: 5 min
  #  paths:
  #    - ${BUILD_BINARY}
  cache:
    <<: *cache
    policy: push

test:
  stage: test
  image: golang
  variables:
    GIT_STRATEGY: none # don't checkout git repo
  script:
    - (./${BUILD_BINARY} &) && sleep 1
    - curl -s http://localhost:80/gigix
  #dependencies: # here, dependencies is optional because by default, all prior jobs are considered as dependencies
  #  - build

#container:build:
#  stage: container
#  image:
#    name: quay.io/buildah/stable:v1.23.1 # https://quay.io/repository/buildah/stable?tab=tags&tag=latest
#  script:
#    - buildah bud -f Dockerfile -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG:-latest} .
#    #- "mkdir ${ARTIFACT_DIR}"
#    #- "buildah push ${CI_REGISTRY_IMAGE}:${TAG} docker-archive:${ARTIFACT_DIR}/${ARTIFACT_NAME}:${TAG}"

container:build:
  stage: container
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - cat /etc/gitlab-runner/certs/ca.crt >> /kaniko/ssl/certs/ca-certificates.crt
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --force
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG:-latest}"
#  rules:
#    - if: $CI_COMMIT_TAG

#container:build:
#  stage: docker
#  image: docker
#  script:
#    - docker build -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_BRANCH} . --no-cache
#    #- [ -z "${CI_COMMIT_TAG}" ] && docker build -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG} || exit 0
#    - docker push --all-tags ${GITLAB_REGISTRY_SERVICE_HOST}:${GITLAB_REGISTRY_SERVICE_PORT}/${CI_PROJECT_PATH}
#  #cache:
#  #  key: ${CI_COMMIT_REF_SLUG}
#  #  policy: pull # there is no need to push cache after since it hasn't changed
#  #dependencies: # here, dependencies is optional because by default, all prior jobs are considered as dependencies
#  #  - build
